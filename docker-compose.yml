version: "3" # 파일 규격 버젼 -> 3이라 적으면 3으로 시작하는 최신버전 실행
services:

  mysql_db: # 서비스 명
    platform: linux/arm64/v8
    image: mysql:latest
    restart: always
    command:
      - --lower_case_table_names=1 # 입력 값이 대·소문자든 소문자로 인식 소문자 인식 파일 생성
    # MySQL 8 은 기본 character set 과 collation 이 utf8mb4과 utf8mb4_0900_ai_ci이므로 별도 설정 불필요.

    container_name: mysql-bank # 컨테이너 이름
    ports: # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
      - MYSQL_DATABASE=bank
      - MYSQL_USER=jinwook
      - MYSQL_PASSWORD=1234

    volumes:
      - /Users/kimjinwook/Shared/data/jinwook-mysql:/var/lib/mysql # -v 옵션 (다렉토리 마운트 설정) Docker 컨테이너의 파일을 사용자 시스템의 파일에 연결한다는 의미
      #- {연결될 실제 물리 folder path}/{docker 안에 folder path}

  redis:
    image: redis:latest
    command: redis-server --port 6379
    container_name: redis-bank
    hostname: redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - "16379:6379"

    volumes:
      - /Users/kimjinwook/Shared/data/jinwook-redis:/var/lib/redis

#  app:
#    restart: always
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: bank
#    ports:
#      - "8083:8091"
#    depends_on:
#      - mysql_db
#      - redis
